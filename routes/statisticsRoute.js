const express = require("express");
const router = express.Router();
const db = require("../db");
const Order = require("../models/Order");
const Menu = require("../models/Menu");
const Student = require("../models/Student");
const PDFDocument = require('pdfkit')
const fs = require('fs')

function getSunday () {
  let sunday = new Date()
  sunday.setDate(sunday.getDate() - sunday.getDay())
  sunday.setHours(0)
  sunday.setMinutes(0)
  sunday.setSeconds(0)
  sunday.setMilliseconds(0)
  return sunday
}

router.get('/recent', async (req, res) => {
  
  let sunday = getSunday()
  let orders = {}
  if (req.query.active === "true") {
    orders = await Order.find({
      date: {
        $gte: sunday
      },
      active: true
    })
  } else {
    orders = await Order.find({
      date: {
        $gte: sunday
      }
    })
  }
  let dates = [0, 0, 0, 0, 0, 0, 0]
  orders.forEach((order) => {
    dates[order.date.getDay()] += order.total
  })
  res.json({res: dates})
})

router.get('/seller', async (req, res) => {
  let sunday = getSunday()
  let orders = await Order.find({
    date: {
      $gte: sunday
    },
  })

  let cashiers = {}

  for (let order of orders) {
    cashiers[order.seller] = (cashiers[order.seller] || 0) + order.total
  }
  res.json({
    res: Object.keys(cashiers).map((x) =>{ 
      return {
        name: x, total: cashiers[x]
      }
    })
  })
})

router.get('/bestsellers', async (req, res) => {
  let sunday = getSunday()
  let items = {}
  let orders = await Order.find({date: {$gte: sunday}})
  for (let order of orders) {
    for (let item of order.items) {
      items[item.name] = (items[item.name] || 0) + item.count
    }
  }
  res.json({res:
    (Object.keys(items).map((x) => {
      return {
        name: x, sold: items[x]
      }
    }))
  })
})

function saveB64toFS(uri, filename) {
  uri = uri.split(",")[1];
  let ReadableData = require("stream").Readable;
  const imageBufferData = Buffer.from(uri, "base64");
  let streamObj = new ReadableData();
  streamObj.push(imageBufferData);
  streamObj.push(null);
  streamObj.pipe(fs.createWriteStream(__dirname + "/../static/" + filename + ".PNG"));  
}

router.post('/pdf', (req, res) => {
  const doc = new PDFDocument()

  doc.pipe(fs.createWriteStream(__dirname + '/../static/output.pdf'))
  doc.fontSize(20).text('Cafeteria Food Ordering System Report')
  doc.fontSize(12).text('Generated by: ' + req.body.generator)
  doc.text('Generated on: ' + new Date())
  doc.fontSize(15).text('Total profits: PHP ' + req.body.total)
  doc.image(req.body.profitChart, {width: 450})
  doc.image(req.body.sellerChart, { width: 450 });
  doc.image(req.body.bestChart, { width: 450 });

  doc.end()
  res.sendStatus(204)
})

router.get('/finishedpdf', (req, res) => {
  let file = __dirname + "/../static/output.pdf";
  fs.readFile(file, (err, data) => {
    res.contentType('application/pdf')
    res.send(data)
  })
})

module.exports = router;